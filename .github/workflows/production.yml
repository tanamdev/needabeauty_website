name: CI/CD Docker Build & Push to GHCR

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      # - name: Install dependencies
      #   run: npm install --legacy-peer-deps

      - name: Run tests (optional)
        run: npm test || echo "No test script"

      - name: Set manual version tag
        run: |
          VERSION=$(node -p "require('./package.json').version")
          NAME=$(node -p "require('./package.json').name")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "NAME=$NAME" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      # - name: Build Docker image with manual version and latest tag
      #   run: |
      #     docker build -t ghcr.io/tanamdev/${{ env.NAME }}:${{ env.VERSION }} .
      #     docker tag ghcr.io/tanamdev/${{ env.NAME }}:${{ env.VERSION }} ghcr.io/tanamdev/${{ env.NAME }}:latest
      # - name: Debug Secret Values (Partial Echo)
      #   run: |
      #     echo "NEXT_PUBLIC_AUTH_API=${{ secrets.NEXT_PUBLIC_AUTH_API }}"
      #     echo "NEXT_PUBLIC_PRODUCT_API=${{ secrets.NEXT_PUBLIC_PRODUCT_API }}"
      #     echo "NEXT_PUBLIC_INVENTORY_API=${{ secrets.NEXT_PUBLIC_INVENTORY_API }}"
      #     echo "NEXT_PUBLIC_TRANSACTION_API=${{ secrets.NEXT_PUBLIC_TRANSACTION_API }}"

      - name: Build Docker image with secrets as build args
        run: |
          docker build \
            --build-arg NEXT_PUBLIC_BRAND_NAME=${{ secrets.NEXT_PUBLIC_BRAND_NAME }} \
            -t ghcr.io/tanamdev/${{ env.NAME }}:${{ env.VERSION }} \
            -t ghcr.io/tanamdev/${{ env.NAME }}:latest .

      - name: Push Docker image to GHCR
        run: |
          docker push ghcr.io/tanamdev/${{ env.NAME }}:${{ env.VERSION }}
          docker push ghcr.io/tanamdev/${{ env.NAME }}:latest

    # - name: Trigger Dokploy Webhook
    #   run: curl -X POST "${{ secrets.DOKPLOY_WEBHOOK_URL }}"
